# Generated by Django 4.2.15 on 2024-08-22 15:51

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("validator", "0030_alter_systemevent_subtype_alter_systemevent_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="Epoch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("start", models.BigIntegerField()),
                ("stop", models.BigIntegerField()),
            ],
        ),
        migrations.AddField(
            model_name="syntheticjobbatch",
            name="block",
            field=models.BigIntegerField(
                help_text="Block number for which this batch is scheduled", null=True, unique=True
            ),
        ),
        migrations.AddField(
            model_name="syntheticjobbatch",
            name="created_at",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name="syntheticjobbatch",
            name="is_missed",
            field=models.BooleanField(
                default=False, help_text="Whether the batch was missed (not run)"
            ),
        ),
        migrations.AlterField(
            model_name="syntheticjobbatch",
            name="accepting_results_until",
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name="syntheticjobbatch",
            name="started_at",
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name="systemevent",
            name="subtype",
            field=models.CharField(
                choices=[
                    ("SUCCESS", "Success"),
                    ("FAILURE", "Failure"),
                    ("SUBTENSOR_CONNECTIVITY_ERROR", "Subtensor Connectivity Error"),
                    (
                        "SUBTENSOR_HYPERPARAMETERS_FETCH_ERROR",
                        "Subtensor Hyperparameters Fetch Error",
                    ),
                    ("COMMIT_WEIGHTS_SUCCESS", "Commit Weights Success"),
                    ("COMMIT_WEIGHTS_ERROR", "Commit Weights Error"),
                    ("COMMIT_WEIGHTS_UNREVEALED_ERROR", "Commit Weights Unrevealed Error"),
                    ("REVEAL_WEIGHTS_ERROR", "Reveal Weights Error"),
                    ("REVEAL_WEIGHTS_SUCCESS", "Reveal Weights Success"),
                    ("SET_WEIGHTS_SUCCESS", "Set Weights Success"),
                    ("SET_WEIGHTS_ERROR", "Set Weights Error"),
                    ("GENERIC_ERROR", "Generic Error"),
                    ("WRITING_TO_CHAIN_TIMEOUT", "Writing To Chain Timeout"),
                    ("WRITING_TO_CHAIN_FAILED", "Writing To Chain Failed"),
                    ("WRITING_TO_CHAIN_GENERIC_ERROR", "Writing To Chain Generic Error"),
                    ("GIVING_UP", "Giving Up"),
                    ("MANIFEST_ERROR", "Manifest Error"),
                    ("MANIFEST_TIMEOUT", "Manifest Timeout"),
                    ("MINER_CONNECTION_ERROR", "Miner Connection Error"),
                    ("MINER_SEND_ERROR", "Miner Send Error"),
                    ("MINER_SCORING_ERROR", "Miner Scoring Error"),
                    ("JOB_NOT_STARTED", "Job Not Started"),
                    ("JOB_REJECTED", "Job Rejected"),
                    ("JOB_EXECUTION_TIMEOUT", "Job Execution Timeout"),
                    ("RECEIPT_FETCH_ERROR", "Receipt Fetch Error"),
                    ("RECEIPT_SEND_ERROR", "Receipt Send Error"),
                    ("SPECS_SENDING_ERROR", "Specs Send Error"),
                    ("HEARTBEAT_ERROR", "Heartbeat Error"),
                    ("UNEXPECTED_MESSAGE", "Unexpected Message"),
                    ("UNAUTHORIZED", "Unauthorized"),
                    ("SYNTHETIC_BATCH", "Synthetic Batch"),
                    ("SYNTHETIC_JOB", "Synthetic Job"),
                    ("OVERSLEPT", "Overslept"),
                ],
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="systemevent",
            name="type",
            field=models.CharField(
                choices=[
                    ("WEIGHT_SETTING_SUCCESS", "Weight Setting Success"),
                    ("WEIGHT_SETTING_FAILURE", "Weight Setting Failure"),
                    ("MINER_ORGANIC_JOB_FAILURE", "Miner Organic Job Failure"),
                    ("MINER_ORGANIC_JOB_SUCCESS", "Miner Organic Job Success"),
                    ("MINER_SYNTHETIC_JOB_SUCCESS", "Miner Synthetic Job Success"),
                    ("MINER_SYNTHETIC_JOB_FAILURE", "Miner Synthetic Job Failure"),
                    ("RECEIPT_FAILURE", "Receipt Failure"),
                    ("FACILITATOR_CLIENT_ERROR", "Facilitator Client Error"),
                    ("VALIDATOR_MINERS_REFRESH", "Validator Miners Refresh"),
                    ("VALIDATOR_SYNTHETIC_JOBS_FAILURE", "Validator Synthetic Jobs Failure"),
                    ("VALIDATOR_FAILURE", "Validator Failure"),
                    ("VALIDATOR_TELEMETRY", "Validator Telemetry"),
                    ("VALIDATOR_CHANNEL_LAYER_ERROR", "Validator Channel Layer Error"),
                ],
                max_length=255,
            ),
        ),
        migrations.AddConstraint(
            model_name="epoch",
            constraint=models.UniqueConstraint(fields=("start", "stop"), name="unique_epoch"),
        ),
        migrations.AddField(
            model_name="syntheticjobbatch",
            name="epoch",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batches",
                to="validator.epoch",
            ),
        ),
    ]
